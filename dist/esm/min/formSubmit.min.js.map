{"version":3,"file":"formSubmit.min.js","sources":["../../../src/store.ts","../../../src/functions.ts","../../../src/index.ts"],"sourcesContent":["import { InputControlObject, PlaceholderObject } from './types';\n\nexport const errClassSelector = '.error';\nexport const inputPlaceholder: PlaceholderObject = {\n  //native html input types except for 'button', 'reset', 'submit'\n  color: '#000000',\n  date: 'yyyy-mm-dd',\n  'datetime-local': 'yyyy-mm-ddThh:mm',\n  email: 'user@domain.com',\n  file: '',\n  image: '',\n  month: 'yyyy-mm',\n  number: '0',\n  password: '',\n  range: '0',\n  search: 'Begin searching...',\n  tel: '(000)000-0000',\n  time: 'hh:mm',\n  url: 'https://www.domain.com/',\n  week: 'yyyy-W00',\n  text: '',\n  radio: '',\n  checkbox: '',\n  hidden: '',\n  'select-one': 'Choose an option...',\n  'select-multiple': 'Choose multiple...',\n  textarea: 'Begin typing...',\n  //custom types define by 'data-type=\"\"'\n  alpha: 'Enter alpha characters only...',\n  int: '0',\n  float: '0.0',\n  currency: '0.00',\n  zipcode: '00000',\n  zip: '00000',\n  zip4: '0000',\n  zipfull: '00000-0000',\n  urlhttp: 'https://www.domain.com/',\n  urlpart: 'path/to/resource.txt',\n  hostname: 'www.domain.com',\n  domain: 'domain.com',\n  ip: '0.0.0.0',\n  timestamp: 'mm/dd/yyyy hh:mm:ss.ms',\n  datemmddyyyy: 'mm/dd/yyyy',\n  dateyyyymmdd: 'yyyy-mm-dd',\n  routing: '000000000',\n  cc: '0000 0000 0000 0000',\n  cvv: '000 or 0000',\n  ssn: '000-00-0000',\n  parcel: '00-000-00-00-000.00 00',\n};\nexport const inputTypes: InputControlObject = {\n  //native html input types except for 'button', 'reset', 'submit'\n  /*\n    'type attribute name': {\n      keys: regex value for allowed keys,\n      value: regex value for allowed value format\n      error: default error message\n    },\n    */\n  color: {\n    keys: /[0-9]|#|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^#([0-9a-fA-F]{6})$/,\n    error: 'Please select a valid color.',\n  },\n  date: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{4}-\\d{2}-\\d{2}$/,\n    error: `Please enter a valid date (${inputPlaceholder.date}).`,\n  },\n  'datetime-local': {\n    keys: /[0-9]|[T]|:|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value:\n      /^([0-9]{4})\\-(1[0-2]|0[0-9])\\-(0[0-9]|1[0-9]|2[0-9]|3[0-1])T(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/,\n    error: `Please enter a valid timestamp (${inputPlaceholder['datetime-local']}).`,\n  },\n  email: {\n    keys: /[a-zA-Z0-9.!#$%&'*+_\\/=?^\\-`\\{\\|\\}\"\\(\\),:'<>@\\[\\]\\\\]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    error: `Please enter a valid email (${inputPlaceholder.email}).`,\n  },\n  file: {\n    keys: /./,\n    value: /^(.*)\\.[\\w+|\\d+|\\W+]{0,5}$/,\n    error: 'Please choose a valid file.',\n  },\n  image: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please choose a valid image.',\n  },\n  month: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{4}-\\d{2}$/,\n    error: `Please enter a valid month (${inputPlaceholder.month}).`,\n  },\n  number: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d+$/,\n    error: 'Please enter a valid number.',\n  },\n  password: {\n    keys: /[a-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@\\[\\]\\\\\\^_`\\{\\|\\}~]|Space|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /./,\n    // Allow all for now, can be set to require special characters and minimum length with,\n    // note for this regex, testing against it should fail for a valid value as it is looking\n    // for the missing requirements to make for a shorter regex (1 upper, 1 lower, 1 special, at least 8 char long)\n    // /^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$/\n    error: 'Please enter a valid password.',\n  },\n  range: {\n    keys: /[0-9]/,\n    value: /\\d+/,\n    error: 'Please select a valid value.',\n  },\n  search: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please enter a valid search string.',\n  },\n  tel: {\n    keys: /[0-9\\-()]|Tab|Backspace/,\n    value: /^((\\+\\d{1,2}\\s?)?1?-?\\.?\\s?\\(?\\d{3}\\)?[\\s.-]?)?\\d{3}[\\s.-]?\\d{4}$/,\n    error: `Please enter a valid telephone number i.e. ${inputPlaceholder.tel}.`,\n  },\n  time: {\n    keys: /[0-9]|:|Tab|Backspace/,\n    value: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/,\n    error: `Please enter a valid time (${inputPlaceholder.time}).`,\n  },\n  url: {\n    keys: /[a-zA-Z0-9.;,/?:@&=+$-_!~*'()#]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /\\b(https?):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]\\b/,\n    error: `Please enter a valid URL (${inputPlaceholder.url}).`,\n  },\n  week: {\n    keys: /[0-9]|-|W|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{4}-W\\d{2}$/,\n    error: `Please enter a valid week (${inputPlaceholder.week}).`,\n  },\n  text: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please enter valid text only.',\n  },\n  radio: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please select an option.',\n  },\n  checkbox: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please select an option',\n  },\n  hidden: {\n    keys: /./,\n    value: /.+/,\n    error: '',\n  },\n  'select-one': {\n    keys: /./,\n    value: /.+/,\n    error: 'Please make a valid selection from the dropdown.',\n  },\n  'select-multiple': {\n    keys: /./,\n    value: /.+/,\n    error: 'Please make valid selections.',\n  },\n  textarea: {\n    keys: /./,\n    value: /.+/,\n    error: 'Please enter valid text.',\n  },\n  //custom types define by 'data-type=\"\"' attribute\n  alpha: {\n    keys: /[a-z]|[A-Z]|Space|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\w+$/,\n    error: 'Please enter valid text only.',\n  },\n  int: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d+$/,\n    error: `Please enter a valid whole number (${inputPlaceholder.int}).`,\n  },\n  float: {\n    keys: /[0-9]|\\.|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d+\\.{1}\\d+$/,\n    error: `Please enter a valid decimal number (${inputPlaceholder.float}).`,\n  },\n  currency: {\n    keys: /[0-9]|\\.|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d+\\.{1}\\d{2}$/,\n    error: `Please enter a valid currency value (${inputPlaceholder.currency}).`,\n  },\n  zipcode: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^[0-9]{5}$/,\n    error: `Please enter a valid zipcode (${inputPlaceholder.zipcode}).`,\n  },\n  zip: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^[0-9]{5}$/,\n    error: `Please enter a valid zipcode (${inputPlaceholder.zip}).`,\n  },\n  zip4: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^[0-9]{4}$/,\n    error: `Please enter a valid zipcode (${inputPlaceholder.zip4}).`,\n  },\n  zipfull: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^[0-9]{5}-[0-9]{4}$/,\n    error: `Please enter a valid zipcode (${inputPlaceholder.zipfull}).`,\n  },\n  urlhttp: {\n    keys: /[a-zA-Z0-9.;,/?:@&=+$-_!~*'()#]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /\\b(https?):\\/\\/(\\w|\\d){3}\\.(\\w+|\\d+)\\.(\\w|\\d){3}\\/\\b/,\n    error: `Please enter a valid full URL (${inputPlaceholder.urlhttp}).`,\n  },\n  urlpart: {\n    keys: /[a-zA-Z0-9.;,/?:@&=+$-_!~*'()#]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /\\b[\\w+|\\d+|\\W+\\/]*\\.[\\w+|\\d+|\\W+]{0,5}\\b/,\n    error: `Please enter a valid partial url (${inputPlaceholder.urlpart}).`,\n  },\n  hostname: {\n    keys: /[a-zA-Z0-9.;,/?:@&=+$-_!~*'()#]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /\\b(.){1,}\\.(\\w+|\\d+)\\.(.){3}\\b/,\n    error: `Please enter a valid hostname (${inputPlaceholder.hostname}).`,\n  },\n  domain: {\n    keys: /[a-zA-Z0-9.;,/?:@&=+$-_!~*'()#]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /\\b(\\w+|\\d+)\\.(.){3}\\b/,\n    error: `Please enter a valid domain name (${inputPlaceholder.domain}).`,\n  },\n  ip: {\n    keys: /[0-9]|\\.|Tab|Backspace/,\n    value: /^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/,\n    error: `Please enter a valid IP address (${inputPlaceholder.ip}).`,\n  },\n  timestamp: {\n    keys: /[0-9]|\\/|:|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value:\n      /^(1[0-2]|0[0-9])\\/(0[0-9]|1[0-9]|2[0-9]|3[0-1])\\/([0-9]{4})\\s(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])[\\.][0-9]{3}$/,\n    error: `Please enter a valid timestamp value (${inputPlaceholder.timestamp}).`,\n  },\n  datemmddyyyy: {\n    keys: /[0-9]|\\/|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^(1[0-2]|0[0-9])\\/(0[0-9]|1[0-9]|2[0-9]|3[0-1])\\/([0-9]{4})$/,\n    error: `Please enter a valid date (${inputPlaceholder.datemmddyyyy}).`,\n  },\n  dateyyyymmdd: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^([0-9]{4})\\-(1[0-2]|0[0-9])\\-(0[0-9]|1[0-9]|2[0-9]|3[0-1])$/,\n    error: `Please enter a valid date (${inputPlaceholder.dateyyyymmdd}).`,\n  },\n  routing: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{9}$/,\n    error: `Please enter a valid ABA Routing number (${inputPlaceholder.routing}).`,\n  },\n  cc: {\n    keys: /[0-9]|Space|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{4} \\d{4} \\d{4} \\d{4}$/,\n    error: `Please enter a valid credit card number (${inputPlaceholder.cc}).`,\n  },\n  cvv: {\n    keys: /[0-9]|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{3,4}$/,\n    error: `Please enter a valid CVV (${inputPlaceholder.cvv}).`,\n  },\n  ssn: {\n    keys: /[0-9]|-|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{3}-\\d{2}-\\d{4}$/,\n    error: `Please enter a valid SSN (${inputPlaceholder.ssn}).`,\n  },\n  parcel: {\n    keys: /[0-9]|-|\\.|Space|Tab|Backspace|ArrowLeft|ArrowRight/,\n    value: /^\\d{2}-\\d{3}-\\d{2}-\\d{2}-\\d{3}\\.\\d{2}\\s{1}\\d{2}$/,\n    error: `Please enter a valid parcel number (${inputPlaceholder.parcel})`,\n  },\n};\nexport const Counter = {\n  init: 0,\n  final: 0,\n};\n","import { Counter, errClassSelector, inputPlaceholder, inputTypes } from './store';\nimport { FormInput, FormInputEvent } from './types';\nconst handleFormSubmit = (ev: SubmitEvent) => {\n  Counter.final = 0; //reset count\n  if (ev.target) {\n    const inputs: FormInput[] = Array.from(\n      (ev.target as HTMLFormElement).querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ),\n    ); //selects all form input elements\n    inputs.forEach((input: FormInput) => input.value && (input.value = input.value.trim())); //Trims leading and trailing spaces\n    document.querySelectorAll('form').forEach((form) => {\n      Counter.final += form.querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ).length;\n    });\n    inputs.filter((input: FormInput) => !isValid(input)).length > 0 &&\n    Counter.init === Counter.final\n      ? ev.preventDefault()\n      : null;\n  }\n};\nexport const isValid = (el: FormInput | HTMLFormElement): boolean => {\n  const tag = el.tagName.toLowerCase();\n  const type =\n    (el.dataset.type || el.type).toLowerCase() === 'true'\n      ? 'text'\n      : (el.dataset.type || el.type).toLowerCase();\n  if (el instanceof HTMLFormElement) {\n    //Allows for passing in an entire FORM tag and validating all inputs where as checkAllValidity checks all forms on the page\n    const inputs: FormInput[] = Array.from(\n      el.querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ),\n    );\n    let isFormValid = true;\n    inputs.forEach((input) => {\n      const { required, name } = input;\n      const isValidInput = isValid(input);\n      isValidInput\n        ? console.log(\n            `Input Name: ${name}\\r\\nInput Type: ${type}\\r\\nRequired: ${required}\\r\\nisValid: ${isValid}`,\n          )\n        : console.error(\n            `Input Name: ${name}\\r\\nInput Type: ${type}\\r\\nRequired: ${required}\\r\\nisValid: ${isValid}`,\n          );\n      if (!isValidInput) isFormValid = false;\n    });\n    return isFormValid;\n  } else {\n    if (!type) {\n      throw new Error(`Invalid Element Type: ${tag}\\r\\nValid input elements only`);\n    }\n    return ['select-one', 'select-multiple'].includes(type)\n      ? handleSelect(el as HTMLSelectElement, true)\n      : ['radio', 'checkbox'].includes(type)\n        ? handleRadiosCheckboxes(el as HTMLInputElement, true)\n        : handleInput(el as HTMLInputElement, true);\n  }\n};\n\nexport const checkAllValidity = () => {\n  const forms = document.querySelectorAll('form');\n  const validInputs: FormInput[] = [];\n  const invalidInputs: FormInput[] = [];\n  forms.forEach((form) => {\n    const inputs: FormInput[] = Array.from(\n      form.querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ),\n    );\n    inputs.forEach((input) => {\n      const { type, dataset } = input;\n      const { type: dataType } = dataset;\n      const resolvedType =\n        (dataType || type).toLowerCase() === 'true' ? 'text' : (dataType || type).toLowerCase();\n      inputTypes[resolvedType].value.test(input.value)\n        ? validInputs.push(input)\n        : invalidInputs.push(input);\n    });\n  });\n  console.group('Valid Inputs:');\n  validInputs.forEach((el) => console.info(el, el.value));\n  console.groupEnd();\n  console.group('Invalid Inputs:');\n  invalidInputs.forEach((el) => console.error(el, el.value));\n  console.groupEnd();\n  return;\n};\nconst inputEventHandler: EventListenerOrEventListenerObject = (ev: FormInputEvent) => {\n  const { target } = ev;\n  if (target) {\n    if (target instanceof HTMLSelectElement) handleSelect(target);\n    if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n      const { type, dataset } = target;\n      const { type: dataType } = dataset;\n      const resolvedType =\n        (dataType || type) === 'true'\n          ? (dataType || type).toLowerCase()\n          : (dataType || type).toLowerCase();\n      if (\n        ['radio', 'checkbox'].includes(resolvedType) &&\n        !(target instanceof HTMLTextAreaElement)\n      ) {\n        handleRadiosCheckboxes(target);\n      }\n      if (['file', 'image'].includes(resolvedType) && !(target instanceof HTMLTextAreaElement))\n        handleFileInput(target);\n      if (!['file', 'image', 'hidden'].includes(resolvedType)) handleInput(target);\n    }\n  } else {\n    throw new Error('No event target found');\n  }\n};\nconst handleSelect = (input: HTMLSelectElement, cb?: (() => void) | boolean) => {\n  const { required, multiple } = input;\n  const selections = input.selectedOptions;\n  const type = input.dataset.type || input.type || multiple ? 'select-multiple' : 'select-one'; //favor dataset value over native type (to allow for applying 'custom' application of formSubmit checks)\n  const val = multiple\n    ? Array.from(selections)\n        .map((selection) => selection.value)\n        .join(',')\n    : selections[0].value;\n  const valid = required ? (val ? true : false) : true;\n  const parent = input.parentNode;\n  if (!valid && !cb) {\n    if (parent) {\n      if (!parent.querySelector(errClassSelector)) {\n        appendErrEl(input);\n      } //if there is no error message field, create it\n      const inputErrorField = parent.querySelector(errClassSelector); //finds to appropriate error field\n      if (inputErrorField) {\n        inputErrorField.textContent = input.dataset.error || inputTypes[type].error;\n      } else {\n        console.warn(`Error message field not found for Input Name:${input.name}`);\n      }\n    } else {\n      throw new Error(`Parent element not found for Input Name:${input.name}`);\n    }\n    const inputErrorField = input.parentNode.querySelector(errClassSelector); //finds to appropriate error field\n    if (inputErrorField) {\n      inputErrorField.textContent = input.dataset.error || inputTypes[type].error;\n    } else {\n      console.warn(`Error message field not found for Input Name:${input.name}`);\n    }\n  }\n  if (valid && !cb) {\n    if (parent) {\n      const errFld = parent.querySelector(errClassSelector);\n      if (errFld) {\n        errFld.remove();\n      } //Remove the error field if there is no error, reduces impact to CSS\n    }\n  }\n  if (cb) return valid;\n  return valid;\n};\n//Each radio/checkbox and its label should be wrapped in an element for ADA compliance i.e. <div><radio/><radio/></div>\nconst handleRadiosCheckboxes = (input: HTMLInputElement, cb?: (() => void) | boolean) => {\n  const { type } = input.dataset || input; //favor dataset value over native type (to allow for applying 'custom' application of formSubmit checks)\n  if (!type) throw new Error('Invalid HTML detected, type attribute required on input elements.');\n  //checked for radios contained in 1 element or contained in multiple wrapping elements\n  const controlGroup: NodeListOf<HTMLInputElement> | undefined =\n    input?.parentNode?.parentNode?.nodeName.toLowerCase() !== 'form' &&\n    input?.parentNode?.parentNode?.querySelectorAll(`input[type=${type}]`).length !== 0\n      ? input?.parentNode?.parentNode?.querySelectorAll(`input[type=${type}]`)\n      : input.parentNode.querySelectorAll(`input[type=${type}]`);\n  const container =\n    input?.parentElement?.parentElement?.nodeName.toLowerCase() !== 'form' &&\n    input?.parentElement?.parentElement?.querySelectorAll(`input[type=${type}]`).length !== 0\n      ? input.parentElement?.parentElement\n      : input.parentElement;\n  if (controlGroup && container) {\n    const isRequired = Array.from(controlGroup).find((el) => el.required) ? true : false; //Checks if any of the group has a required attribute\n    const valid = isRequired\n      ? Array.from(controlGroup).filter((el) => el.checked === true).length > 0\n        ? true\n        : false\n      : true; //if required is present on any element in the group, check that a selection is made\n    if (!valid && !cb) {\n      if (!container.querySelector(errClassSelector)) {\n        appendErrEl(container, true);\n      }\n      const inputErrorField = container.querySelector(errClassSelector);\n      if (inputErrorField) {\n        inputErrorField.textContent = input.dataset.error || inputTypes[type].error;\n      } else {\n        console.warn(`Error message field not found for Input Name:${input.name}`);\n      }\n    }\n    if (valid && !cb) {\n      const inputErrorField = container.querySelector(errClassSelector);\n      if (inputErrorField) {\n        inputErrorField.remove();\n      } //Remove the error field if there is no error, reduces impact to CSS\n    }\n    if (cb) return valid;\n    return valid;\n  } else {\n    throw new Error(\n      `Invalid html formatting at InputName: ${input.name}. Radios/checkboxes must be correctly wrapped with <label> and a container element.\\r\\n\n      I.E. <div>\\r\\n\\t<div>\\r\\n\\t\\t<input type=\"checkbox/radio\"/>\\r\\n\\t\\t<label>Label Text</label>\\r\\n\\t</div>\\r\\n\\t<div>\\r\\n\\t\\t<input type=\"checkbox/radio\"/>\\r\\n\\t\\t<label>Label Text</label>\\r\\n\\t</div>\\r\\n</div>`,\n    );\n  }\n};\n//Locks radio groups to only 1 selection\nconst controlRadios = (e: HTMLInputElement | FormInputEvent) => {\n  const input = e instanceof Event ? (e.target as HTMLInputElement) : e; //allows for event driven and passing in entire elements\n  //checked for radios contained in 1 element or contained in multiple wrapping elements\n  const radioGroup: NodeListOf<HTMLInputElement> | undefined =\n    input?.parentNode?.parentNode?.nodeName.toLowerCase() !== 'form' &&\n    input?.parentNode?.parentNode?.querySelectorAll('input[type=radio]').length !== 0\n      ? input.parentNode?.parentNode?.querySelectorAll('input[type=radio]')\n      : input.parentNode.querySelectorAll('input[type=radio]');\n  //Forces only one radio selection for each group of radio buttons\n  if (radioGroup) {\n    Array.from(radioGroup)\n      .filter((el) => el !== input)\n      .forEach((el) => (el.checked = false));\n  }\n};\n//Validates against a regex for the input type, if it doesn't pass the check, returns the error message\nconst handleInput = (\n  input: HTMLInputElement | HTMLTextAreaElement,\n  cb?: (() => void) | boolean,\n) => {\n  const { type } = input.dataset || input;\n  const inputType = type === 'true' ? 'text' : input.dataset.type || input.type; //favor dataset value over native type (to allow for applying 'custom' application of formSubmit checks)\n  const isNull = input.value.trim().length === 0; //Checks if a value was entered\n  const { required } = input;\n  if (!cb) {\n    const parent = input.parentNode;\n    if (!parent) throw new Error(`Parent element not found for Input Name:${input.name}`);\n    if (parent) {\n      if (!parent.querySelector(errClassSelector)) {\n        appendErrEl(input);\n      } //if there is no error message field, create it\n      const inputErrorField = parent.querySelector(errClassSelector); //finds to appropriate error field\n      if (inputErrorField) {\n        const { error: errMsg } = input.dataset || inputTypes[inputType];\n        if (errMsg) {\n          required && isNull\n            ? (inputErrorField.textContent = errMsg) //if required and has no value\n            : required && !isNull && !inputTypes[inputType].value.test(input.value)\n              ? (inputErrorField.textContent = errMsg) //if required and has an invalid value\n              : !required && !isNull && !inputTypes[inputType].value.test(input.value)\n                ? (inputErrorField.textContent = errMsg)\n                : (inputErrorField.textContent = ''); //if not required but has an invalid value\n          //Remove the error field if there is no error, reduces impact to CSS\n        } else {\n          throw new Error(`Error initializing error message value for Input Name: ${input.name}`);\n        }\n        if (inputErrorField.textContent === '') inputErrorField.remove();\n      } else {\n        throw new Error(`Error initializing error field for Input Name: ${input.name}`);\n      }\n    }\n  }\n  if (cb)\n    return required && isNull\n      ? false\n      : required && !isNull && !inputTypes[inputType].value.test(input.value)\n        ? false\n        : !required && !isNull && !inputTypes[inputType].value.test(input.value)\n          ? false\n          : true;\n  return required && isNull\n    ? false\n    : required && !isNull && !inputTypes[inputType].value.test(input.value)\n      ? false\n      : !required && !isNull && !inputTypes[inputType].value.test(input.value)\n        ? false\n        : true;\n};\nconst handleFileInput = (input: HTMLInputElement, cb?: (() => void) | boolean) => {\n  const { type, accept, required, files } = input;\n  if (type !== 'file') throw new Error(`Invalid input type`);\n  if (!accept)\n    throw new Error(\n      `Missing accept attribute on file input element. Set accept to '*' to allow all file types.`,\n    );\n  const acceptedTypes = accept.split(',').map((type) => type.trim());\n  const regexCheck = [];\n  if (!cb) {\n    const parent = input.parentNode;\n    if (!parent) throw new Error(`Parent element not found for Input Name:${input.name}`);\n    if (!parent.querySelector(errClassSelector)) {\n      appendErrEl(input);\n    } //if there is no error message field, create it\n    const inputErrorField = parent.querySelector(errClassSelector); //finds to appropriate error field\n    if (!inputErrorField)\n      throw new Error(`Error initializing error field for Input Name: ${input.name}`);\n    const { error: errMsg } = input.dataset || inputTypes.file;\n    if (files) {\n      if (files.length > 0) {\n        const fileTypeErr = [];\n        for (const file of Array.from(files)) {\n          const { name, type } = file;\n          const isValidType =\n            acceptedTypes[0] === '*'\n              ? true\n              : acceptedTypes.some((atype) =>\n                  atype.endsWith('/*')\n                    ? type.startsWith(atype.slice(0, -2))\n                    : type.includes(atype.replace('.', '')),\n                );\n          !isValidType && fileTypeErr.push(`${name} - Invalid file type, ${type.toLowerCase()}.`);\n          regexCheck.push(inputTypes.file.value.test(name));\n        }\n        if (errMsg) {\n          required && files.length === 0\n            ? (inputErrorField.textContent = errMsg)\n            : required && files.length > 0 && fileTypeErr.length > 0\n              ? (inputErrorField.textContent = fileTypeErr.join('\\r\\n'))\n              : !required && files.length > 0 && fileTypeErr.length > 0\n                ? (inputErrorField.textContent = fileTypeErr.join('\\r\\n'))\n                : (inputErrorField.textContent = '');\n        } else {\n          throw new Error(`Error initializing error message value for Input Name: ${input.name}`);\n        }\n        if (fileTypeErr.length > 0) input.value = '';\n      }\n      inputErrorField.textContent === '' && inputErrorField.remove();\n    }\n  }\n  if (cb) {\n    if (files) {\n      return required && files.length === 0\n        ? false\n        : required && files.length > 0 && !regexCheck.includes(false)\n          ? false\n          : !required && files.length > 0 && !regexCheck.includes(false)\n            ? false\n            : true;\n    }\n  }\n};\n//Based on input type, limits what keys are allowed\nconst handleInputKeys: EventListenerOrEventListenerObject = (evt) => {\n  const { key, target } = evt as KeyboardEvent; //get the key code from the event\n  if (!target) return;\n  if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n    const { dataset } = target;\n    ///////Need to write code to handle copy and paste shortcuts\n    const type = (dataset.type || target.type) === 'true' ? 'text' : dataset.type || target.type; //sets the input type\n    if (!inputTypes[type].keys.test(key)) {\n      evt.preventDefault();\n    } //passes key code through regex of allowed keys, if not allowed, no action is taken\n  }\n};\n//If there is no client side error field, create one and add as a sibling to input\nconst appendErrEl = (el: FormInput | HTMLFormElement | HTMLElement, isRadioCheckbox?: boolean) => {\n  const div = document.createElement('div'); //Create a div element\n  div.classList.add('error'); //applies class to div element\n  !isRadioCheckbox ? el.insertAdjacentElement('afterend', div) : el.appendChild(div); //places the div element next to its respective input\n};\n//Counts all inputs on load and compares count on final to protect against injection\nconst addCounter = () => Counter.init++;\n//Add Multiple event listeners with 1 call\nconst addMultipleEventListeners = (el: HTMLElement | FormInput, eTypes: Array<string>) => {\n  eTypes.forEach((eType) => {\n    el.addEventListener(eType, inputEventHandler);\n  });\n};\nconst removeAllEventListeners = (input: FormInput) => {\n  const events = ['keydown', 'input', 'change', 'blur'];\n  const handlers = [handleInputKeys, inputEventHandler];\n  for (let i = 0; i < events.length; i++) {\n    for (let j = 0; j < handlers.length; j++) {\n      input.removeEventListener(events[i], handlers[j]);\n    }\n  }\n};\n\n//Initialization Functions\nexport const initialize = () => {\n  const forms = document.querySelectorAll('form'); //select all forms on the page\n  forms.forEach((form) => {\n    const inputs: FormInput[] = Array.from(\n      form.querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ),\n    );\n    for (let i = 0; i < inputs.length; i++) {\n      addCounter();\n    }\n    inputs.forEach((input: FormInput) => {\n      const { type, dataset } = input;\n      const { type: dataType } = dataset;\n      const resolvedType =\n        (dataType || type) === 'true'\n          ? (dataType || type).toLowerCase()\n          : (dataType || type).toLowerCase(); //favor dataset value over native type (to allow for applying 'custom' application of formSubmit checks)\n      if (\n        !['file', 'image', 'hidden', 'select-one', 'select-multiple', 'radio', 'checkbox'].includes(\n          resolvedType,\n        )\n      ) {\n        !(input instanceof HTMLSelectElement) &&\n          !input.placeholder &&\n          (input.placeholder = inputPlaceholder[resolvedType]); //defaults to native placeholder value over store placeholder\n        if (resolvedType === 'ssn') input.setAttribute('type', 'password'); //add native html type to mask enter values on ssn fields\n        addMultipleEventListeners(input, ['input', 'change', 'blur']);\n        input.addEventListener('keydown', handleInputKeys);\n      }\n      if (['file', 'image'].includes(resolvedType)) {\n        addMultipleEventListeners(input, ['input', 'change', 'blur']);\n      }\n      if (['select-one', 'select-multiple'].includes(resolvedType)) {\n        addMultipleEventListeners(input, ['input', 'change', 'blur']);\n      }\n      if (resolvedType === 'radio') {\n        input.addEventListener('change', controlRadios); //Forces only 1 radio selection, checkboxes should be used for multiselect\n        addMultipleEventListeners(input, ['input', 'blur']);\n      }\n      if (resolvedType === 'checkbox') {\n        addMultipleEventListeners(input, ['input', 'change', 'blur']);\n      }\n    });\n    form.addEventListener('submit', handleFormSubmit);\n  });\n};\nexport const reinitialize = () => {\n  Counter.init = 0;\n  const forms = document.querySelectorAll('form');\n  forms.forEach((form) => {\n    const inputs: FormInput[] = Array.from(\n      form.querySelectorAll(\n        'input:not([type=button]):not([type=reset]):not([type=submit]):not([type=image]),select,textarea',\n      ),\n    );\n    inputs.forEach((input) => removeAllEventListeners(input));\n    form.removeEventListener('submit', handleFormSubmit);\n  });\n  initialize();\n};\n","// mdEditor main.js\nimport { initialize, reinitialize, isValid, checkAllValidity } from './functions';\nexport async function init(): Promise<void> {\n  try {\n    // Wait for the DOMContentLoaded event before executing further\n    await new Promise<void>((resolve) => {\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => resolve());\n      } else {\n        resolve();\n      }\n    });\n    initialize();\n  } catch (error: any) {\n    throw new Error(`${error.message}\\r\\nFailed to initialize mark down editor.`);\n  }\n}\n\n// Call the init function immediately when the module is imported\ninit();\n\n// Make functions available in the global scope for the browser console\n(window as any).isValid = isValid;\n(window as any).checkAllValidity = checkAllValidity;\n(window as any).reinitialize = reinitialize;\n"],"names":["errClassSelector","inputPlaceholder","color","date","email","file","image","month","number","password","range","search","tel","time","url","week","text","radio","checkbox","hidden","textarea","alpha","int","float","currency","zipcode","zip","zip4","zipfull","urlhttp","urlpart","hostname","domain","ip","timestamp","datemmddyyyy","dateyyyymmdd","routing","cc","cvv","ssn","parcel","inputTypes","keys","value","error","Counter","init","final","handleFormSubmit","ev","target","inputs","Array","from","querySelectorAll","forEach","input","trim","document","form","length","filter","isValid","preventDefault","el","tag","tagName","toLowerCase","type","dataset","HTMLFormElement","isFormValid","required","name","isValidInput","console","log","Error","includes","handleSelect","handleRadiosCheckboxes","handleInput","inputEventHandler","HTMLSelectElement","HTMLInputElement","HTMLTextAreaElement","dataType","resolvedType","handleFileInput","cb","multiple","selections","selectedOptions","val","map","selection","join","valid","parent","parentNode","querySelector","appendErrEl","inputErrorField","textContent","warn","errFld","remove","controlGroup","nodeName","container","parentElement","find","checked","controlRadios","e","Event","radioGroup","inputType","isNull","errMsg","test","accept","files","acceptedTypes","split","regexCheck","fileTypeErr","some","atype","endsWith","startsWith","slice","replace","push","handleInputKeys","evt","key","isRadioCheckbox","div","createElement","classList","add","appendChild","insertAdjacentElement","addMultipleEventListeners","eTypes","eType","addEventListener","initialize","i","placeholder","setAttribute","async","Promise","resolve","readyState","message","window","checkAllValidity","forms","validInputs","invalidInputs","group","info","groupEnd","reinitialize","events","handlers","j","removeEventListener","removeAllEventListeners"],"mappings":"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"}